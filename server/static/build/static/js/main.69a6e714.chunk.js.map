{"version":3,"sources":["pages/PublicView.js","pages/AdminView.js","App.js","index.js"],"names":["PublicView","socket","useEffect","socketIOClient","on","message","row","document","createElement","classList","add","field","div","innerHTML","appendChild","getElementById","disconnect","useState","password","setPassword","adminpass","className","type","data-bs-toggle","data-bs-target","id","tabIndex","aria-hidden","data-bs-dismiss","aria-label","name","placeholder","onClick","event","inputs","querySelectorAll","ticket","input","value","emit","data","console","log","to","onChange","e","target","AdminView","App","path","exact","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69a6e714.chunk.js","sourcesContent":["import { Fragment, useState, useRef, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport socketIOClient from \"socket.io-client\"\r\nimport './PublicView.css'\r\n\r\n\r\nfunction handleErrors(err) {\r\n    console.log(\"ERROR:\", err);\r\n}\r\n\r\nconst PublicView = () => {\r\n\r\n    let socket = null\r\n    useEffect(\r\n        () => {\r\n            socket = socketIOClient(\"http://localhost:3001\")\r\n            socket.on(\"submission:add\", (message) => {\r\n                \r\n                let row = document.createElement('div');\r\n                row.classList.add('row');\r\n\r\n                let order = ['name', 'grade', 'desc']\r\n\r\n                //Always guarentees entries into the Hashmap are in the order 'name', 'grade', 'description'\r\n                for( let field of order ){\r\n                    let div = document.createElement('div');\r\n                    div.classList.add(field);\r\n\r\n                    div.innerHTML = message[field]\r\n                    row.appendChild(div);\r\n                }                \r\n\r\n                //Adds row to the rows\r\n                document.getElementById('rows').appendChild(row);\r\n\r\n            })\r\n            return () => socket.disconnect()\r\n        }, [])\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n\r\n    let adminpass = \"admin123\"\r\n\r\n    // const [submissions, setSubmissions] = useState([one, two, three, four])\r\n\r\n    /**\r\n     * If the admin password entered is correct, admin access will be granted, and the login button will become available\r\n     */\r\n    const renderAdminLogin = () => {\r\n        if (password === adminpass) {\r\n            return (\r\n                <button type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Submit</button>\r\n            )\r\n        } else {\r\n            return (\r\n                //Default text that appears until correct admin password is entered\r\n                <button type=\"button\" className=\"btn btn-secondary disabled\">Incorrect Password... </button >\r\n            )\r\n        }\r\n    }\r\n\r\n    const renderAdminBtn = () => {\r\n        if (password === adminpass) {\r\n            return (\r\n                <Link to=\"/admin\">\r\n                    <button type=\"button\" className=\"btn btn-danger ml-3\">\r\n                        <i className=\"fas fa-unlock\"></i>\r\n                    </button>\r\n                </Link>\r\n            )\r\n        }\r\n        else {\r\n            return (\r\n                <button type=\"button\" className=\"btn btn-danger ml-3\" data-bs-toggle=\"modal\" data-bs-target=\"#adminModal\">\r\n                    <i className=\"fas fa-lock\" />\r\n                </button>\r\n            )\r\n        }\r\n    }\r\n\r\n    const submitTicket = (event) => {\r\n        let submissionTicket = document.getElementById('submissionTicket');\r\n        let inputs = submissionTicket.querySelectorAll('input');\r\n        let ticket = {}\r\n        for (let input of inputs) {\r\n            ticket[input.name] = input.value;\r\n        }\r\n\r\n\r\n        socket.emit(\"submission:add\", ticket, function (data) {\r\n            console.log(\"SERVER GOT MESSAGE\")\r\n\r\n            // Add submission to local client\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"top-queue-container\">\r\n                {/* Header */}\r\n                <h1 className=\"queue-title text-center mt-5\" > Welcome to the Queue</h1>\r\n                <div className=\"d-flex mt-5\">\r\n                    {/* Create Submission Btn */}\r\n                    <button type=\"button\" className=\"btn btn-secondary mx-3\" data-bs-toggle=\"modal\" data-bs-target=\"#submissionsModal\">\r\n                        Create Submission\r\n                    </button>\r\n                    {/* Submissions Modal */}\r\n                    <div className=\"modal fade\" id=\"submissionsModal\" tabIndex=\"-1\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\">Create Submission</h5>\r\n                                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                </div>\r\n                                <div id='submissionTicket' className=\"modal-body\">\r\n                                    {/*Text inside Modal that appears when \"Create Submissions\" Button is Pressed*/}\r\n                                    <input className=\"form-control form-control-lg\" type=\"text\" name=\"name\" placeholder=\"Name\" />\r\n                                    <input className=\"form-control form-control-lg\" type=\"text\" name=\"grade\" placeholder=\"Grade\" />\r\n                                    <input className=\"form-control form-control-lg\" type=\"text\" name=\"desc\" placeholder=\"Description\" />\r\n                                    <div className=\"modal-footer\">\r\n                                        <button type=\"button\" className=\"btn btn-secondary\" onClick={submitTicket}>Submit</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {/* Admin Login Btn */}\r\n                    {renderAdminBtn()}\r\n                    {/* Admin Login Modal */}\r\n                    <div className=\"modal fade\" id=\"adminModal\" tabIndex=\"-1\" aria-hidden=\"true\">\r\n                        <div className=\"modal-dialog\">\r\n                            <div className=\"modal-content\">\r\n                                <div className=\"modal-header\">\r\n                                    <h5 className=\"modal-title\">Log Into Admin Space: </h5>\r\n                                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                </div>\r\n                                <div className=\"modal-body\">\r\n                                    <form>\r\n                                        <input className=\"form-control form-control-default\" onChange={e => setPassword(e.target.value)} type=\"password\" placeholder=\"Admin Password\" />\r\n                                    </form>\r\n                                </div>\r\n                                <div className=\"modal-footer\">\r\n                                    {renderAdminLogin()}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n            <div className=\"bottom-queue-container\">\r\n                {/* Submissions */}\r\n                \r\n                <div id='rows'>\r\n                </div> \r\n            </div>\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default PublicView;\r\n\r\n","import React, { Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n// import io from 'socket.io-client'\r\nimport './PublicView.css'\r\n\r\nconst AdminView = () => {\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <div className=\"top-queue-container\">\r\n                {/* Header */}\r\n                <h1 className=\"queue-title text-center mt-5\">Welcome to the Queue</h1>\r\n                <div className=\"d-flex mt-5\">\r\n                    {/* Sign Out Button */}\r\n                    <Link to=\"/\">\r\n                        <button type=\"button\" className=\"btn btn-danger ml-2\">\r\n                            Sign Out\r\n                        </button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"bottom-queue-container\">\r\n                <table className=\"table table-striped table-dark text-center\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Name</th>\r\n                            <th>Description</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AdminView;","import React, { Fragment } from 'react'\r\nimport PublicView from './pages/PublicView.js'\r\nimport AdminView from './pages/AdminView.js'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n  return (\r\n    <Fragment>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={PublicView} />\r\n          <Route path=\"/admin\" exact component={AdminView} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </Fragment>\r\n  )\r\n}\r\nexport default App; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}